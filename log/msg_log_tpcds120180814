2018-08-14 11:49:02: Connected to database [gabsam] with user [tpcds1]
2018-08-14 11:49:02: Connection pool instantiated with [1] connections
2018-08-14 11:49:06: ('spark.cores.max', '20')
2018-08-14 11:49:06: ('spark.executor.memory', '2g')
2018-08-14 11:49:06: ('spark.app.id', 'app-20180814114905-0041')
2018-08-14 11:49:06: ('spark.driver.host', 'cisk.rs2.com')
2018-08-14 11:49:06: ('spark.executor.id', 'driver')
2018-08-14 11:49:06: ('spark.python.worker.reuse', 'True')
2018-08-14 11:49:06: ('spark.driver.maxResultSize', '1g')
2018-08-14 11:49:06: ('spark.default.parallelism', '80')
2018-08-14 11:49:06: ('spark.sql.shuffle.partitions', '80')
2018-08-14 11:49:06: ('spark.executor.instances', '20')
2018-08-14 11:49:06: ('spark.logConf', 'False')
2018-08-14 11:49:06: ('spark.rdd.compress', 'True')
2018-08-14 11:49:06: ('spark.driver.memory', '2g')
2018-08-14 11:49:06: ('spark.serializer.objectStreamReset', '100')
2018-08-14 11:49:06: ('spark.executor.cores', '1')
2018-08-14 11:49:06: ('spark.master', 'spark://cisk.rs2.com:7077')
2018-08-14 11:49:06: ('spark.submit.deployMode', 'client')
2018-08-14 11:49:06: ('spark.executorEnv.PYTHONPATH', '$PYTHONPATH:/home/gabriels/ICS5200')
2018-08-14 11:49:06: ('spark.ui.showConsoleProgress', 'true')
2018-08-14 11:49:06: ('spark.driver.port', '24846')
2018-08-14 11:49:06: ('spark.app.name', 'ICS5200')
2018-08-14 11:49:06: Table [REP_EXECUTION_PLANS] already exists..
2018-08-14 11:49:06: Starting optimizer stats dropping..
2018-08-14 11:52:22: Schema [tpcds1] stripped of optimizer stats..
2018-08-14 11:52:22: Generating execution metrics for [query_1.sql]..
2018-08-14 11:52:24: Generating execution metrics for [query_2.sql]..
2018-08-14 11:52:24: Skipped DML instruction due to following exception: [ORA-00903: invalid table name] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ wscs as (select sold_date_sk ,sales_price from select ws_sold_date_sk sold_date_sk ,ws_ext_sales_price sales_price from web_sales union all select cs_sold_date_sk sold_date_sk ,cs_ext_sales_price sales_price from catalog_sales), wswscs as (select d_week_seq, sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales, sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales, sum(case when (d_day_name='Tuesday') then sales_price else null end) tue_sales, sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales, sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales, sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales, sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales from wscs ,date_dim where d_date_sk = sold_date_sk group by d_week_seq) select d_week_seq1 ,round(sun_sales1/sun_sales2,2) ,round(mon_sales1/mon_sales2,2) ,round(tue_sales1/tue_sales2,2) ,round(wed_sales1/wed_sales2,2) ,round(thu_sales1/thu_sales2,2) ,round(fri_sales1/fri_sales2,2) ,round(sat_sales1/sat_sales2,2) from (select wswscs.d_week_seq d_week_seq1 ,sun_sales sun_sales1 ,mon_sales mon_sales1 ,tue_sales tue_sales1 ,wed_sales wed_sales1 ,thu_sales thu_sales1 ,fri_sales fri_sales1 ,sat_sales sat_sales1 from wswscs,date_dim where date_dim.d_week_seq = wswscs.d_week_seq and d_year = 1998) y, (select wswscs.d_week_seq d_week_seq2 ,sun_sales sun_sales2 ,mon_sales mon_sales2 ,tue_sales tue_sales2 ,wed_sales wed_sales2 ,thu_sales thu_sales2 ,fri_sales fri_sales2 ,sat_sales sat_sales2 from wswscs ,date_dim where date_dim.d_week_seq = wswscs.d_week_seq and d_year = 1998+1) z where d_week_seq1=d_week_seq2-53 order by d_week_seq1 ]
2018-08-14 11:52:24: Generating execution metrics for [query_3.sql]..
2018-08-14 11:52:26: Generating execution metrics for [query_4.sql]..
2018-08-14 11:52:34: Generating execution metrics for [query_5.sql]..
2018-08-14 11:52:34: Skipped DML instruction due to following exception: [ORA-00911: invalid character] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ ssr as (select s_store_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select ss_store_sk as store_sk, ss_sold_date_sk ,'yyyy-mm-dd'_sk, ss_ext_sales_price as sales_price, ss_net_profit as profit, to_date(0 as decimal(7,2)) as return_amt, to_date(0 as decimal(7,2)) as net_loss from store_sales union all select sr_store_sk as store_sk, sr_returned_date_sk ,'yyyy-mm-dd'_sk, to_date(0 as decimal(7,2)) as sales_price, to_date(0 as decimal(7,2)) as profit, sr_return_amt as return_amt, sr_net_loss as net_loss from store_returns ) salesreturns, date_dim, store where date_sk = d_date_sk and d_date between to_date('2000-08-19' ,'yyyy-mm-dd') and (to_date('2000-08-19' ,'yyyy-mm-dd') + 14) and store_sk = s_store_sk group by s_store_id) , csr as (select cp_catalog_page_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select cs_catalog_page_sk as page_sk, cs_sold_date_sk ,'yyyy-mm-dd'_sk, cs_ext_sales_price as sales_price, cs_net_profit as profit, to_date(0 as decimal(7,2)) as return_amt, to_date(0 as decimal(7,2)) as net_loss from catalog_sales union all select cr_catalog_page_sk as page_sk, cr_returned_date_sk ,'yyyy-mm-dd'_sk, to_date(0 as decimal(7,2)) as sales_price, to_date(0 as decimal(7,2)) as profit, cr_return_amount as return_amt, cr_net_loss as net_loss from catalog_returns ) salesreturns, date_dim, catalog_page where date_sk = d_date_sk and d_date between to_date('2000-08-19' ,'yyyy-mm-dd') and (to_date('2000-08-19' ,'yyyy-mm-dd') + 14) and page_sk = cp_catalog_page_sk group by cp_catalog_page_id) , wsr as (select web_site_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select ws_web_site_sk as wsr_web_site_sk, ws_sold_date_sk ,'yyyy-mm-dd'_sk, ws_ext_sales_price as sales_price, ws_net_profit as profit, to_date(0 as decimal(7,2)) as return_amt, to_date(0 as decimal(7,2)) as net_loss from web_sales union all select ws_web_site_sk as wsr_web_site_sk, wr_returned_date_sk ,'yyyy-mm-dd'_sk, to_date(0 as decimal(7,2)) as sales_price, to_date(0 as decimal(7,2)) as profit, wr_return_amt as return_amt, wr_net_loss as net_loss from web_returns left outer join web_sales on ( wr_item_sk = ws_item_sk and wr_order_number = ws_order_number) ) salesreturns, date_dim, web_site where date_sk = d_date_sk and d_date between to_date('2000-08-19' ,'yyyy-mm-dd') and (to_date('2000-08-19' ,'yyyy-mm-dd') + 14) and wsr_web_site_sk = web_site_sk group by web_site_id) select * from ( select channel , id , sum(sales) as sales , sum(returns) as returns , sum(profit) as profit from (select 'store channel' as channel , 'store' || s_store_id as id , sales , returns , (profit - profit_loss) as profit from ssr union all select 'catalog channel' as channel , 'catalog_page' || cp_catalog_page_id as id , sales , returns , (profit - profit_loss) as profit from csr union all select 'web channel' as channel , 'web_site' || web_site_id as id , sales , returns , (profit - profit_loss) as profit from wsr ) x group by rollup (channel, id) order by channel ,id ) where rownum <= 100 ]
2018-08-14 11:52:34: Generating execution metrics for [query_6.sql]..
2018-08-14 11:52:34: Generating execution metrics for [query_7.sql]..
2018-08-14 11:52:35: Generating execution metrics for [query_8.sql]..
2018-08-14 11:52:36: Generating execution metrics for [query_9.sql]..
2018-08-14 11:52:38: Generating execution metrics for [query_10.sql]..
2018-08-14 11:52:41: Generating execution metrics for [query_11.sql]..
2018-08-14 11:52:43: Generating execution metrics for [query_12.sql]..
2018-08-14 11:52:43: Generating execution metrics for [query_13.sql]..
2018-08-14 11:52:47: Generating execution metrics for [query_14.sql]..
2018-08-14 11:52:50: Generating execution metrics for [query_15.sql]..
2018-08-14 11:52:50: Skipped DML instruction due to following exception: [ORA-00918: column ambiguously defined] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ cross_items as (select i_item_sk ss_item_sk from item, (select iss.i_brand_id brand_id ,iss.i_class_id class_id ,iss.i_category_id category_id from store_sales ,item iss ,date_dim d1 where ss_item_sk = iss.i_item_sk and ss_sold_date_sk = d1.d_date_sk and d1.d_year between 1999 AND 1999 + 2 intersect select ics.i_brand_id ,ics.i_class_id ,ics.i_category_id from catalog_sales ,item ics ,date_dim d2 where cs_item_sk = ics.i_item_sk and cs_sold_date_sk = d2.d_date_sk and d2.d_year between 1999 AND 1999 + 2 intersect select iws.i_brand_id ,iws.i_class_id ,iws.i_category_id from web_sales ,item iws ,date_dim d3 where ws_item_sk = iws.i_item_sk and ws_sold_date_sk = d3.d_date_sk and d3.d_year between 1999 AND 1999 + 2) x where i_brand_id = brand_id and i_class_id = class_id and i_category_id = category_id ), avg_sales as (select avg(quantity*list_price) average_sales from (select ss_quantity quantity ,ss_list_price list_price from store_sales ,date_dim where ss_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2 union all select cs_quantity quantity ,cs_list_price list_price from catalog_sales ,date_dim where cs_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2 union all select ws_quantity quantity ,ws_list_price list_price from web_sales ,date_dim where ws_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2) x) select * from ( select * from (select 'store' channel, i_brand_id,i_class_id,i_category_id ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales from store_sales ,item ,date_dim where ss_item_sk in (select ss_item_sk from cross_items) and ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk and d_week_seq = (select d_week_seq from date_dim where d_year = 1999 + 1 and d_moy = 12 and d_dom = 3) group by i_brand_id,i_class_id,i_category_id having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year, (select 'store' channel, i_brand_id,i_class_id ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales from store_sales ,item ,date_dim where ss_item_sk in (select ss_item_sk from cross_items) and ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk and d_week_seq = (select d_week_seq from date_dim where d_year = 1999 and d_moy = 12 and d_dom = 3) group by i_brand_id,i_class_id,i_category_id having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year where this_year.i_brand_id= last_year.i_brand_id and this_year.i_class_id = last_year.i_class_id and this_year.i_category_id = last_year.i_category_id order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id ) where rownum <= 100 ]
2018-08-14 11:52:50: Generating execution metrics for [query_16.sql]..
2018-08-14 11:52:51: Generating execution metrics for [query_17.sql]..
2018-08-14 11:52:51: Generating execution metrics for [query_18.sql]..
2018-08-14 11:52:59: Generating execution metrics for [query_19.sql]..
2018-08-14 11:53:00: Generating execution metrics for [query_20.sql]..
2018-08-14 11:53:00: Generating execution metrics for [query_21.sql]..
2018-08-14 11:53:00: Skipped DML instruction due to following exception: [ORA-01861: literal does not match format string] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price ,sum(cs_ext_sales_price) as itemrevenue ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over (partition by i_class) as revenueratio from catalog_sales ,item ,date_dim where cs_item_sk = i_item_sk and i_category in ('Books', 'Music', 'Sports') and cs_sold_date_sk = d_date_sk and d_date between to_date('2002-06-18' ,'yyyy-mm-dd') and (to_date('2002-06-18' ,'yyyy-mm-dd') + 30) group by i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price order by i_category ,i_class ,i_item_id ,i_item_desc ,revenueratio ) where rownum <= 100 ]
2018-08-14 11:53:01: Generating execution metrics for [query_22.sql]..
2018-08-14 11:53:01: Skipped DML instruction due to following exception: [ORA-01861: literal does not match format string] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select * from(select w_warehouse_name ,i_item_id ,sum(case when (to_date(d_date ,'yyyy-mm-dd') < to_date ('1999-06-22' ,'yyyy-mm-dd')) then inv_quantity_on_hand else 0 end) as inv_before ,sum(case when (to_date(d_date ,'yyyy-mm-dd') >= to_date ('1999-06-22' ,'yyyy-mm-dd')) then inv_quantity_on_hand else 0 end) as inv_after from inventory ,warehouse ,item ,date_dim where i_current_price between 0.99 and 1.49 and i_item_sk = inv_item_sk and inv_warehouse_sk = w_warehouse_sk and inv_date_sk = d_date_sk and d_date between (to_date ('1999-06-22' ,'yyyy-mm-dd') - 30) and (to_date ('1999-06-22' ,'yyyy-mm-dd') + 30) group by w_warehouse_name, i_item_id) x where (case when inv_before > 0 then inv_after / inv_before else null end) between 2.0/3.0 and 3.0/2.0 order by w_warehouse_name ,i_item_id ) where rownum <= 100 ]
2018-08-14 11:53:01: Generating execution metrics for [query_23.sql]..
2018-08-14 11:53:07: Generating execution metrics for [query_24.sql]..
2018-08-14 11:53:13: Generating execution metrics for [query_25.sql]..
2018-08-14 11:53:20: Generating execution metrics for [query_26.sql]..
2018-08-14 11:53:20: Generating execution metrics for [query_27.sql]..
2018-08-14 11:53:20: Generating execution metrics for [query_28.sql]..
2018-08-14 11:53:21: Generating execution metrics for [query_29.sql]..
2018-08-14 11:53:21: Generating execution metrics for [query_30.sql]..
2018-08-14 11:53:21: Generating execution metrics for [query_31.sql]..
2018-08-14 11:53:23: Generating execution metrics for [query_32.sql]..
2018-08-14 11:53:24: Generating execution metrics for [query_33.sql]..
2018-08-14 11:53:24: Skipped DML instruction due to following exception: [ORA-00904: "C_LAST_REVIEW_DATE_SK": invalid identifier] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ customer_total_return as (select wr_returning_customer_sk as ctr_customer_sk ,ca_state as ctr_state, sum(wr_return_amt) as ctr_total_return from web_returns ,date_dim ,customer_address where wr_returned_date_sk = d_date_sk and d_year =2000 and wr_returning_addr_sk = ca_address_sk group by wr_returning_customer_sk ,ca_state) select * from ( select c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address ,c_last_review_date_sk,ctr_total_return from customer_total_return ctr1 ,customer_address ,customer where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2 from customer_total_return ctr2 where ctr1.ctr_state = ctr2.ctr_state) and ca_address_sk = c_current_addr_sk and ca_state = 'AR' and ctr1.ctr_customer_sk = c_customer_sk order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address ,c_last_review_date_sk,ctr_total_return ) where rownum <= 100 ]
2018-08-14 11:53:24: Generating execution metrics for [query_34.sql]..
2018-08-14 11:53:25: Generating execution metrics for [query_35.sql]..
2018-08-14 11:53:25: Skipped DML instruction due to following exception: [ORA-01861: literal does not match format string] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select sum(cs_ext_discount_amt) as "excess discount amount" from catalog_sales ,item ,date_dim where i_manufact_id = 722 and i_item_sk = cs_item_sk and d_date between '2001-03-09' and (to_date('2001-03-09' ,'yyyy-mm-dd') + 90) and d_date_sk = cs_sold_date_sk and cs_ext_discount_amt > ( select 1.3 * avg(cs_ext_discount_amt) from catalog_sales ,date_dim where cs_item_sk = i_item_sk and d_date between '2001-03-09' and (to_date('2001-03-09' ,'yyyy-mm-dd') + 90) and d_date_sk = cs_sold_date_sk ) ) where rownum <= 100 ]
2018-08-14 11:53:25: Generating execution metrics for [query_36.sql]..
2018-08-14 11:53:25: Generating execution metrics for [query_37.sql]..
2018-08-14 11:53:26: Generating execution metrics for [query_38.sql]..
2018-08-14 11:54:10: Generating execution metrics for [query_39.sql]..
2018-08-14 11:54:11: Generating execution metrics for [query_40.sql]..
2018-08-14 11:54:11: Generating execution metrics for [query_41.sql]..
2018-08-14 11:54:12: Generating execution metrics for [query_42.sql]..
2018-08-14 11:54:15: Generating execution metrics for [query_43.sql]..
2018-08-14 11:54:18: Generating execution metrics for [query_44.sql]..
2018-08-14 11:54:18: Skipped DML instruction due to following exception: [ORA-01861: literal does not match format string] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select w_state ,i_item_id ,sum(case when (to_date(d_date ,'yyyy-mm-dd') < to_date ('2001-05-02' ,'yyyy-mm-dd')) then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before ,sum(case when (to_date(d_date ,'yyyy-mm-dd') >= to_date ('2001-05-02' ,'yyyy-mm-dd')) then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after from catalog_sales left outer join catalog_returns on (cs_order_number = cr_order_number and cs_item_sk = cr_item_sk) ,warehouse ,item ,date_dim where i_current_price between 0.99 and 1.49 and i_item_sk = cs_item_sk and cs_warehouse_sk = w_warehouse_sk and cs_sold_date_sk = d_date_sk and d_date between (to_date ('2001-05-02' ,'yyyy-mm-dd') - 30) and (to_date ('2001-05-02' ,'yyyy-mm-dd') + 30) group by w_state,i_item_id order by w_state,i_item_id ) where rownum <= 100 ]
2018-08-14 11:54:18: Generating execution metrics for [query_45.sql]..
2018-08-14 11:54:19: Generating execution metrics for [query_46.sql]..
2018-08-14 11:54:19: Generating execution metrics for [query_47.sql]..
2018-08-14 11:54:19: Generating execution metrics for [query_48.sql]..
2018-08-14 11:54:20: Generating execution metrics for [query_49.sql]..
2018-08-14 11:54:21: Generating execution metrics for [query_50.sql]..
2018-08-14 11:54:22: Generating execution metrics for [query_51.sql]..
2018-08-14 11:54:24: Generating execution metrics for [query_52.sql]..
2018-08-14 12:07:40: Connected to database [gabsam] with user [tpcds1]
2018-08-14 12:07:40: Connection pool instantiated with [1] connections
2018-08-14 12:08:00: Connected to database [gabsam] with user [tpcds1]
2018-08-14 12:08:00: Connection pool instantiated with [1] connections
2018-08-14 12:08:03: ('spark.cores.max', '20')
2018-08-14 12:08:03: ('spark.executor.memory', '2g')
2018-08-14 12:08:03: ('spark.executor.id', 'driver')
2018-08-14 12:08:03: ('spark.python.worker.reuse', 'True')
2018-08-14 12:08:03: ('spark.driver.maxResultSize', '1g')
2018-08-14 12:08:03: ('spark.default.parallelism', '80')
2018-08-14 12:08:03: ('spark.sql.shuffle.partitions', '80')
2018-08-14 12:08:03: ('spark.executor.instances', '20')
2018-08-14 12:08:03: ('spark.logConf', 'False')
2018-08-14 12:08:03: ('spark.driver.port', '26908')
2018-08-14 12:08:03: ('spark.rdd.compress', 'True')
2018-08-14 12:08:03: ('spark.driver.host', 'tempvcenter.rs2.com')
2018-08-14 12:08:03: ('spark.driver.memory', '2g')
2018-08-14 12:08:03: ('spark.serializer.objectStreamReset', '100')
2018-08-14 12:08:03: ('spark.app.id', 'app-20180814120803-0042')
2018-08-14 12:08:03: ('spark.executor.cores', '1')
2018-08-14 12:08:03: ('spark.master', 'spark://cisk.rs2.com:7077')
2018-08-14 12:08:03: ('spark.submit.deployMode', 'client')
2018-08-14 12:08:03: ('spark.executorEnv.PYTHONPATH', '$PYTHONPATH:/home/gabriels/ICS5200')
2018-08-14 12:08:03: ('spark.ui.showConsoleProgress', 'true')
2018-08-14 12:08:03: ('spark.app.name', 'ICS5200')
2018-08-14 12:08:03: TPC-DS SQLs generated for dataset of [1] Gigabytes
2018-08-14 12:08:03: Successfully migrated catv_up.sql under src/ tree..
2018-08-14 12:08:03: Successfully migrated ccv_up.sql under src/ tree..
2018-08-14 12:08:03: Successfully migrated custv_up.sql under src/ tree..
2018-08-14 12:08:03: Successfully migrated dm_c.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_c_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ca.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ca_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ca_v.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_cc.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_cc_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_cc_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_cp.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_cp_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_i.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_i_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_i_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_p.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_p_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_s_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_s_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_w.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_w_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_wp.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_wp_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_wp_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ws.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ws_s.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated dm_ws_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated itemv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated iv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_cr.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_cr_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_cs.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_cs_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_sr.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_sr_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_ss.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_ss_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_wr.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_wr_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_ws.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated lf_ws_t.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated promv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated storv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated websv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated webv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully migrated wrhsv_up.sql under src/ tree..
2018-08-14 12:08:04: Successfully finished migrating DML scripts!
2018-08-14 12:08:04: Starting TPC-DS sql splitting
2018-08-14 12:08:04: Generated query_1.sql
2018-08-14 12:08:04: Generated query_2.sql
2018-08-14 12:08:04: Generated query_3.sql
2018-08-14 12:08:04: Generated query_4.sql
2018-08-14 12:08:04: Generated query_5.sql
2018-08-14 12:08:04: Generated query_6.sql
2018-08-14 12:08:04: Generated query_7.sql
2018-08-14 12:08:04: Generated query_8.sql
2018-08-14 12:08:04: Generated query_9.sql
2018-08-14 12:08:04: Generated query_10.sql
2018-08-14 12:08:04: Generated query_11.sql
2018-08-14 12:08:04: Generated query_12.sql
2018-08-14 12:08:04: Generated query_13.sql
2018-08-14 12:08:04: Generated query_14.sql
2018-08-14 12:08:04: Generated query_15.sql
2018-08-14 12:08:04: Generated query_16.sql
2018-08-14 12:08:04: Generated query_17.sql
2018-08-14 12:08:04: Generated query_18.sql
2018-08-14 12:08:04: Generated query_19.sql
2018-08-14 12:08:04: Generated query_20.sql
2018-08-14 12:08:04: Generated query_21.sql
2018-08-14 12:08:04: Generated query_22.sql
2018-08-14 12:08:04: Generated query_23.sql
2018-08-14 12:08:04: Generated query_24.sql
2018-08-14 12:08:04: Generated query_25.sql
2018-08-14 12:08:04: Generated query_26.sql
2018-08-14 12:08:04: Generated query_27.sql
2018-08-14 12:08:04: Generated query_28.sql
2018-08-14 12:08:04: Generated query_29.sql
2018-08-14 12:08:04: Generated query_30.sql
2018-08-14 12:08:04: Generated query_31.sql
2018-08-14 12:08:04: Generated query_32.sql
2018-08-14 12:08:04: Generated query_33.sql
2018-08-14 12:08:04: Generated query_34.sql
2018-08-14 12:08:04: Generated query_35.sql
2018-08-14 12:08:04: Generated query_36.sql
2018-08-14 12:08:04: Generated query_37.sql
2018-08-14 12:08:04: Generated query_38.sql
2018-08-14 12:08:04: Generated query_39.sql
2018-08-14 12:08:04: Generated query_40.sql
2018-08-14 12:08:04: Generated query_41.sql
2018-08-14 12:08:04: Generated query_42.sql
2018-08-14 12:08:04: Generated query_43.sql
2018-08-14 12:08:04: Generated query_44.sql
2018-08-14 12:08:04: Generated query_45.sql
2018-08-14 12:08:04: Generated query_46.sql
2018-08-14 12:08:04: Generated query_47.sql
2018-08-14 12:08:04: Generated query_48.sql
2018-08-14 12:08:04: Generated query_49.sql
2018-08-14 12:08:04: Generated query_50.sql
2018-08-14 12:08:04: Generated query_51.sql
2018-08-14 12:08:04: Generated query_52.sql
2018-08-14 12:08:04: Generated query_53.sql
2018-08-14 12:08:04: Generated query_54.sql
2018-08-14 12:08:04: Generated query_55.sql
2018-08-14 12:08:04: Generated query_56.sql
2018-08-14 12:08:04: Generated query_57.sql
2018-08-14 12:08:04: Generated query_58.sql
2018-08-14 12:08:04: Generated query_59.sql
2018-08-14 12:08:04: Generated query_60.sql
2018-08-14 12:08:04: Generated query_61.sql
2018-08-14 12:08:04: Generated query_62.sql
2018-08-14 12:08:04: Generated query_63.sql
2018-08-14 12:08:04: Generated query_64.sql
2018-08-14 12:08:04: Generated query_65.sql
2018-08-14 12:08:04: Generated query_66.sql
2018-08-14 12:08:04: Generated query_67.sql
2018-08-14 12:08:04: Generated query_68.sql
2018-08-14 12:08:04: Generated query_69.sql
2018-08-14 12:08:04: Generated query_70.sql
2018-08-14 12:08:04: Generated query_71.sql
2018-08-14 12:08:04: Generated query_72.sql
2018-08-14 12:08:04: Generated query_73.sql
2018-08-14 12:08:04: Generated query_74.sql
2018-08-14 12:08:04: Generated query_75.sql
2018-08-14 12:08:04: Generated query_76.sql
2018-08-14 12:08:04: Generated query_77.sql
2018-08-14 12:08:04: Generated query_78.sql
2018-08-14 12:08:04: Generated query_79.sql
2018-08-14 12:08:04: Generated query_80.sql
2018-08-14 12:08:04: Generated query_81.sql
2018-08-14 12:08:04: Generated query_82.sql
2018-08-14 12:08:04: Generated query_83.sql
2018-08-14 12:08:04: Generated query_84.sql
2018-08-14 12:08:04: Generated query_85.sql
2018-08-14 12:08:04: Generated query_86.sql
2018-08-14 12:08:04: Generated query_87.sql
2018-08-14 12:08:04: Generated query_88.sql
2018-08-14 12:08:04: Generated query_89.sql
2018-08-14 12:08:04: Generated query_90.sql
2018-08-14 12:08:04: Generated query_91.sql
2018-08-14 12:08:04: Generated query_92.sql
2018-08-14 12:08:04: Generated query_93.sql
2018-08-14 12:08:04: Generated query_94.sql
2018-08-14 12:08:04: Generated query_95.sql
2018-08-14 12:08:04: Generated query_96.sql
2018-08-14 12:08:04: Generated query_97.sql
2018-08-14 12:08:04: Generated query_98.sql
2018-08-14 12:08:04: Generated query_99.sql
2018-08-14 12:08:04: Generated query_100.sql
2018-08-14 12:08:04: Generated query_101.sql
2018-08-14 12:08:04: Generated query_102.sql
2018-08-14 12:08:04: Generated query_103.sql
2018-08-14 12:08:04: Generated query_104.sql
2018-08-14 12:08:04: Script Complete!
-------------------------------------
2018-08-14 12:10:07: Connected to database [gabsam] with user [tpcds1]
2018-08-14 12:10:07: Connection pool instantiated with [1] connections
2018-08-14 12:10:10: ('spark.cores.max', '20')
2018-08-14 12:10:10: ('spark.executor.memory', '2g')
2018-08-14 12:10:10: ('spark.driver.host', 'cisk.rs2.com')
2018-08-14 12:10:10: ('spark.app.id', 'app-20180814121009-0045')
2018-08-14 12:10:10: ('spark.executor.id', 'driver')
2018-08-14 12:10:10: ('spark.driver.port', '27043')
2018-08-14 12:10:10: ('spark.python.worker.reuse', 'True')
2018-08-14 12:10:10: ('spark.driver.maxResultSize', '1g')
2018-08-14 12:10:10: ('spark.default.parallelism', '80')
2018-08-14 12:10:10: ('spark.sql.shuffle.partitions', '80')
2018-08-14 12:10:10: ('spark.executor.instances', '20')
2018-08-14 12:10:10: ('spark.logConf', 'False')
2018-08-14 12:10:10: ('spark.rdd.compress', 'True')
2018-08-14 12:10:10: ('spark.driver.memory', '2g')
2018-08-14 12:10:10: ('spark.serializer.objectStreamReset', '100')
2018-08-14 12:10:10: ('spark.executor.cores', '1')
2018-08-14 12:10:10: ('spark.master', 'spark://cisk.rs2.com:7077')
2018-08-14 12:10:10: ('spark.submit.deployMode', 'client')
2018-08-14 12:10:10: ('spark.executorEnv.PYTHONPATH', '$PYTHONPATH:/home/gabriels/ICS5200')
2018-08-14 12:10:10: ('spark.ui.showConsoleProgress', 'true')
2018-08-14 12:10:10: ('spark.app.name', 'ICS5200')
2018-08-14 12:10:10: Table [REP_EXECUTION_PLANS] already exists..
2018-08-14 12:10:10: Starting optimizer stats dropping..
2018-08-14 12:14:24: Schema [tpcds1] stripped of optimizer stats..
2018-08-14 12:14:24: Generating execution metrics for [query_1.sql]..
2018-08-14 12:14:25: Generating execution metrics for [query_2.sql]..
2018-08-14 12:14:25: Skipped DML instruction due to following exception: [ORA-00903: invalid table name] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ wscs as (select sold_date_sk ,sales_price from select ws_sold_date_sk sold_date_sk ,ws_ext_sales_price sales_price from web_sales union all select cs_sold_date_sk sold_date_sk ,cs_ext_sales_price sales_price from catalog_sales), wswscs as (select d_week_seq, sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales, sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales, sum(case when (d_day_name='Tuesday') then sales_price else null end) tue_sales, sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales, sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales, sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales, sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales from wscs ,date_dim where d_date_sk = sold_date_sk group by d_week_seq) select d_week_seq1 ,round(sun_sales1/sun_sales2,2) ,round(mon_sales1/mon_sales2,2) ,round(tue_sales1/tue_sales2,2) ,round(wed_sales1/wed_sales2,2) ,round(thu_sales1/thu_sales2,2) ,round(fri_sales1/fri_sales2,2) ,round(sat_sales1/sat_sales2,2) from (select wswscs.d_week_seq d_week_seq1 ,sun_sales sun_sales1 ,mon_sales mon_sales1 ,tue_sales tue_sales1 ,wed_sales wed_sales1 ,thu_sales thu_sales1 ,fri_sales fri_sales1 ,sat_sales sat_sales1 from wswscs,date_dim where date_dim.d_week_seq = wswscs.d_week_seq and d_year = 1998) y, (select wswscs.d_week_seq d_week_seq2 ,sun_sales sun_sales2 ,mon_sales mon_sales2 ,tue_sales tue_sales2 ,wed_sales wed_sales2 ,thu_sales thu_sales2 ,fri_sales fri_sales2 ,sat_sales sat_sales2 from wswscs ,date_dim where date_dim.d_week_seq = wswscs.d_week_seq and d_year = 1998+1) z where d_week_seq1=d_week_seq2-53 order by d_week_seq1 ]
2018-08-14 12:14:25: Generating execution metrics for [query_3.sql]..
2018-08-14 12:14:25: Generating execution metrics for [query_4.sql]..
2018-08-14 12:14:33: Generating execution metrics for [query_5.sql]..
2018-08-14 12:14:33: Skipped DML instruction due to following exception: [ORA-00905: missing keyword] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ ssr as (select s_store_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select ss_store_sk as store_sk, ss_sold_date_sk as date_sk, ss_ext_sales_price as sales_price, ss_net_profit as profit, cast(0 as decimal(7,2)) as return_amt, cast(0 as decimal(7,2)) as net_loss from store_sales union all select sr_store_sk as store_sk, sr_returned_date_sk as date_sk, cast(0 as decimal(7,2)) as sales_price, cast(0 as decimal(7,2)) as profit, sr_return_amt as return_amt, sr_net_loss as net_loss from store_returns ) salesreturns, date_dim, store where date_sk = d_date_sk and d_date between to_date2000-08-19' ,'yyyy-mm-dd') and (to_date2000-08-19' ,'yyyy-mm-dd') + 14) and store_sk = s_store_sk group by s_store_id) , csr as (select cp_catalog_page_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select cs_catalog_page_sk as page_sk, cs_sold_date_sk as date_sk, cs_ext_sales_price as sales_price, cs_net_profit as profit, cast(0 as decimal(7,2)) as return_amt, cast(0 as decimal(7,2)) as net_loss from catalog_sales union all select cr_catalog_page_sk as page_sk, cr_returned_date_sk as date_sk, cast(0 as decimal(7,2)) as sales_price, cast(0 as decimal(7,2)) as profit, cr_return_amount as return_amt, cr_net_loss as net_loss from catalog_returns ) salesreturns, date_dim, catalog_page where date_sk = d_date_sk and d_date between to_date2000-08-19' ,'yyyy-mm-dd') and (to_date2000-08-19' ,'yyyy-mm-dd') + 14) and page_sk = cp_catalog_page_sk group by cp_catalog_page_id) , wsr as (select web_site_id, sum(sales_price) as sales, sum(profit) as profit, sum(return_amt) as returns, sum(net_loss) as profit_loss from ( select ws_web_site_sk as wsr_web_site_sk, ws_sold_date_sk as date_sk, ws_ext_sales_price as sales_price, ws_net_profit as profit, cast(0 as decimal(7,2)) as return_amt, cast(0 as decimal(7,2)) as net_loss from web_sales union all select ws_web_site_sk as wsr_web_site_sk, wr_returned_date_sk as date_sk, cast(0 as decimal(7,2)) as sales_price, cast(0 as decimal(7,2)) as profit, wr_return_amt as return_amt, wr_net_loss as net_loss from web_returns left outer join web_sales on ( wr_item_sk = ws_item_sk and wr_order_number = ws_order_number) ) salesreturns, date_dim, web_site where date_sk = d_date_sk and d_date between to_date2000-08-19' ,'yyyy-mm-dd') and (to_date2000-08-19' ,'yyyy-mm-dd') + 14) and wsr_web_site_sk = web_site_sk group by web_site_id) select * from ( select channel , id , sum(sales) as sales , sum(returns) as returns , sum(profit) as profit from (select 'store channel' as channel , 'store' || s_store_id as id , sales , returns , (profit - profit_loss) as profit from ssr union all select 'catalog channel' as channel , 'catalog_page' || cp_catalog_page_id as id , sales , returns , (profit - profit_loss) as profit from csr union all select 'web channel' as channel , 'web_site' || web_site_id as id , sales , returns , (profit - profit_loss) as profit from wsr ) x group by rollup (channel, id) order by channel ,id ) where rownum <= 100 ]
2018-08-14 12:14:33: Generating execution metrics for [query_6.sql]..
2018-08-14 12:14:33: Generating execution metrics for [query_7.sql]..
2018-08-14 12:14:33: Generating execution metrics for [query_8.sql]..
2018-08-14 12:14:34: Generating execution metrics for [query_9.sql]..
2018-08-14 12:14:38: Generating execution metrics for [query_10.sql]..
2018-08-14 12:14:41: Generating execution metrics for [query_11.sql]..
2018-08-14 12:14:44: Generating execution metrics for [query_12.sql]..
2018-08-14 12:14:44: Skipped DML instruction due to following exception: [ORA-00905: missing keyword] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price ,sum(ws_ext_sales_price) as itemrevenue ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over (partition by i_class) as revenueratio from web_sales ,item ,date_dim where ws_item_sk = i_item_sk and i_category in ('Men', 'Books', 'Electronics') and ws_sold_date_sk = d_date_sk and d_date between to_date2001-06-15' ,'yyyy-mm-dd') and (to_date2001-06-15' ,'yyyy-mm-dd') + 30) group by i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price order by i_category ,i_class ,i_item_id ,i_item_desc ,revenueratio ) where rownum <= 100 ]
2018-08-14 12:14:44: Generating execution metrics for [query_13.sql]..
2018-08-14 12:14:49: Generating execution metrics for [query_14.sql]..
2018-08-14 12:14:54: Generating execution metrics for [query_15.sql]..
2018-08-14 12:14:54: Skipped DML instruction due to following exception: [ORA-00918: column ambiguously defined] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ cross_items as (select i_item_sk ss_item_sk from item, (select iss.i_brand_id brand_id ,iss.i_class_id class_id ,iss.i_category_id category_id from store_sales ,item iss ,date_dim d1 where ss_item_sk = iss.i_item_sk and ss_sold_date_sk = d1.d_date_sk and d1.d_year between 1999 AND 1999 + 2 intersect select ics.i_brand_id ,ics.i_class_id ,ics.i_category_id from catalog_sales ,item ics ,date_dim d2 where cs_item_sk = ics.i_item_sk and cs_sold_date_sk = d2.d_date_sk and d2.d_year between 1999 AND 1999 + 2 intersect select iws.i_brand_id ,iws.i_class_id ,iws.i_category_id from web_sales ,item iws ,date_dim d3 where ws_item_sk = iws.i_item_sk and ws_sold_date_sk = d3.d_date_sk and d3.d_year between 1999 AND 1999 + 2) x where i_brand_id = brand_id and i_class_id = class_id and i_category_id = category_id ), avg_sales as (select avg(quantity*list_price) average_sales from (select ss_quantity quantity ,ss_list_price list_price from store_sales ,date_dim where ss_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2 union all select cs_quantity quantity ,cs_list_price list_price from catalog_sales ,date_dim where cs_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2 union all select ws_quantity quantity ,ws_list_price list_price from web_sales ,date_dim where ws_sold_date_sk = d_date_sk and d_year between 1999 and 1999 + 2) x) select * from ( select * from (select 'store' channel, i_brand_id,i_class_id,i_category_id ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales from store_sales ,item ,date_dim where ss_item_sk in (select ss_item_sk from cross_items) and ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk and d_week_seq = (select d_week_seq from date_dim where d_year = 1999 + 1 and d_moy = 12 and d_dom = 3) group by i_brand_id,i_class_id,i_category_id having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year, (select 'store' channel, i_brand_id,i_class_id ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales from store_sales ,item ,date_dim where ss_item_sk in (select ss_item_sk from cross_items) and ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk and d_week_seq = (select d_week_seq from date_dim where d_year = 1999 and d_moy = 12 and d_dom = 3) group by i_brand_id,i_class_id,i_category_id having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year where this_year.i_brand_id= last_year.i_brand_id and this_year.i_class_id = last_year.i_class_id and this_year.i_category_id = last_year.i_category_id order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id ) where rownum <= 100 ]
2018-08-14 12:14:55: Generating execution metrics for [query_16.sql]..
2018-08-14 12:14:55: Generating execution metrics for [query_17.sql]..
2018-08-14 12:14:55: Skipped DML instruction due to following exception: [ORA-01756: quoted string not properly terminated] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select count(distinct cs_order_number) as "order count" ,sum(cs_ext_ship_cost) as "total shipping cost" ,sum(cs_net_profit) as "total net profit" from catalog_sales cs1 ,date_dim ,customer_address ,call_center where d_date between '2002-4-01' and (to_date2002-4-01' ,'yyyy-mm-dd') + 60) and cs1.cs_ship_date_sk = d_date_sk and cs1.cs_ship_addr_sk = ca_address_sk and ca_state = 'PA' and cs1.cs_call_center_sk = cc_call_center_sk and cc_county in ('Williamson County','Williamson County','Williamson County','Williamson County', 'Williamson County' ) and exists (select * from catalog_sales cs2 where cs1.cs_order_number = cs2.cs_order_number and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk) and not exists(select * from catalog_returns cr1 where cs1.cs_order_number = cr1.cr_order_number) order by count(distinct cs_order_number) ) where rownum <= 100 ]
2018-08-14 12:14:55: Generating execution metrics for [query_18.sql]..
2018-08-14 12:14:56: Generating execution metrics for [query_19.sql]..
2018-08-14 12:14:56: Generating execution metrics for [query_20.sql]..
2018-08-14 12:14:57: Generating execution metrics for [query_21.sql]..
2018-08-14 12:14:57: Skipped DML instruction due to following exception: [ORA-00905: missing keyword] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price ,sum(cs_ext_sales_price) as itemrevenue ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over (partition by i_class) as revenueratio from catalog_sales ,item ,date_dim where cs_item_sk = i_item_sk and i_category in ('Books', 'Music', 'Sports') and cs_sold_date_sk = d_date_sk and d_date between to_date2002-06-18' ,'yyyy-mm-dd') and (to_date2002-06-18' ,'yyyy-mm-dd') + 30) group by i_item_id ,i_item_desc ,i_category ,i_class ,i_current_price order by i_category ,i_class ,i_item_id ,i_item_desc ,revenueratio ) where rownum <= 100 ]
2018-08-14 12:14:57: Generating execution metrics for [query_22.sql]..
2018-08-14 12:14:57: Skipped DML instruction due to following exception: [ORA-00907: missing right parenthesis] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select * from(select w_warehouse_name ,i_item_id ,sum(case when (cast(d_date as date) < cast ('1999-06-22' as date)) then inv_quantity_on_hand else 0 end) as inv_before ,sum(case when (cast(d_date as date) >= cast ('1999-06-22' as date)) then inv_quantity_on_hand else 0 end) as inv_after from inventory ,warehouse ,item ,date_dim where i_current_price between 0.99 and 1.49 and i_item_sk = inv_item_sk and inv_warehouse_sk = w_warehouse_sk and inv_date_sk = d_date_sk and d_date between (cast ('1999-06-22' as date) - 30 days) and (cast ('1999-06-22' as date) + 30 days) group by w_warehouse_name, i_item_id) x where (case when inv_before > 0 then inv_after / inv_before else null end) between 2.0/3.0 and 3.0/2.0 order by w_warehouse_name ,i_item_id ) where rownum <= 100 ]
2018-08-14 12:14:57: Generating execution metrics for [query_23.sql]..
2018-08-14 12:15:05: Generating execution metrics for [query_24.sql]..
2018-08-14 12:15:13: Generating execution metrics for [query_25.sql]..
2018-08-14 12:15:19: Generating execution metrics for [query_26.sql]..
2018-08-14 12:15:20: Generating execution metrics for [query_27.sql]..
2018-08-14 12:15:20: Generating execution metrics for [query_28.sql]..
2018-08-14 12:15:21: Generating execution metrics for [query_29.sql]..
2018-08-14 12:15:21: Generating execution metrics for [query_30.sql]..
2018-08-14 12:15:22: Generating execution metrics for [query_31.sql]..
2018-08-14 12:15:24: Generating execution metrics for [query_32.sql]..
2018-08-14 12:15:24: Generating execution metrics for [query_33.sql]..
2018-08-14 12:15:24: Skipped DML instruction due to following exception: [ORA-00904: "C_LAST_REVIEW_DATE_SK": invalid identifier] - Instruction: [ with /*ICS5200_MONITOR_HINT*/ customer_total_return as (select wr_returning_customer_sk as ctr_customer_sk ,ca_state as ctr_state, sum(wr_return_amt) as ctr_total_return from web_returns ,date_dim ,customer_address where wr_returned_date_sk = d_date_sk and d_year =2000 and wr_returning_addr_sk = ca_address_sk group by wr_returning_customer_sk ,ca_state) select * from ( select c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address ,c_last_review_date_sk,ctr_total_return from customer_total_return ctr1 ,customer_address ,customer where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2 from customer_total_return ctr2 where ctr1.ctr_state = ctr2.ctr_state) and ca_address_sk = c_current_addr_sk and ca_state = 'AR' and ctr1.ctr_customer_sk = c_customer_sk order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address ,c_last_review_date_sk,ctr_total_return ) where rownum <= 100 ]
2018-08-14 12:15:24: Generating execution metrics for [query_34.sql]..
2018-08-14 12:15:26: Generating execution metrics for [query_35.sql]..
2018-08-14 12:15:26: Skipped DML instruction due to following exception: [ORA-00907: missing right parenthesis] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select sum(cs_ext_discount_amt) as "excess discount amount" from catalog_sales ,item ,date_dim where i_manufact_id = 722 and i_item_sk = cs_item_sk and d_date between '2001-03-09' and (to_date2001-03-09' ,'yyyy-mm-dd') + 90) and d_date_sk = cs_sold_date_sk and cs_ext_discount_amt > ( select 1.3 * avg(cs_ext_discount_amt) from catalog_sales ,date_dim where cs_item_sk = i_item_sk and d_date between '2001-03-09' and (to_date2001-03-09' ,'yyyy-mm-dd') + 90) and d_date_sk = cs_sold_date_sk ) ) where rownum <= 100 ]
2018-08-14 12:15:27: Generating execution metrics for [query_36.sql]..
2018-08-14 12:15:27: Generating execution metrics for [query_37.sql]..
2018-08-14 12:15:27: Generating execution metrics for [query_38.sql]..
2018-08-14 12:16:27: Generating execution metrics for [query_39.sql]..
2018-08-14 12:16:28: Generating execution metrics for [query_40.sql]..
2018-08-14 12:16:28: Skipped DML instruction due to following exception: [ORA-00905: missing keyword] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select i_item_id ,i_item_desc ,i_current_price from item, inventory, date_dim, catalog_sales where i_current_price between 29 and 29 + 30 and inv_item_sk = i_item_sk and d_date_sk=inv_date_sk and d_date between to_date2002-03-29' ,'yyyy-mm-dd') and (to_date2002-03-29' ,'yyyy-mm-dd') + 60) and i_manufact_id in (705,742,777,944) and inv_quantity_on_hand between 100 and 500 and cs_item_sk = i_item_sk group by i_item_id,i_item_desc,i_current_price order by i_item_id ) where rownum <= 100 ]
2018-08-14 12:16:28: Generating execution metrics for [query_41.sql]..
2018-08-14 12:16:29: Generating execution metrics for [query_42.sql]..
2018-08-14 12:16:34: Generating execution metrics for [query_43.sql]..
2018-08-14 12:16:39: Generating execution metrics for [query_44.sql]..
2018-08-14 12:16:39: Skipped DML instruction due to following exception: [ORA-00907: missing right parenthesis] - Instruction: [ select /*ICS5200_MONITOR_HINT*/ * from (select w_state ,i_item_id ,sum(case when (cast(d_date as date) < cast ('2001-05-02' as date)) then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before ,sum(case when (cast(d_date as date) >= cast ('2001-05-02' as date)) then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after from catalog_sales left outer join catalog_returns on (cs_order_number = cr_order_number and cs_item_sk = cr_item_sk) ,warehouse ,item ,date_dim where i_current_price between 0.99 and 1.49 and i_item_sk = cs_item_sk and cs_warehouse_sk = w_warehouse_sk and cs_sold_date_sk = d_date_sk and d_date between (cast ('2001-05-02' as date) - 30 days) and (cast ('2001-05-02' as date) + 30 days) group by w_state,i_item_id order by w_state,i_item_id ) where rownum <= 100 ]
2018-08-14 12:16:39: Generating execution metrics for [query_45.sql]..
2018-08-14 12:16:39: Generating execution metrics for [query_46.sql]..
2018-08-14 12:16:40: Generating execution metrics for [query_47.sql]..
2018-08-14 12:16:41: Generating execution metrics for [query_48.sql]..
2018-08-14 12:16:42: Generating execution metrics for [query_49.sql]..
2018-08-14 12:16:42: Generating execution metrics for [query_50.sql]..
2018-08-14 12:16:45: Generating execution metrics for [query_51.sql]..
2018-08-14 12:16:48: Generating execution metrics for [query_52.sql]..
2018-08-14 12:20:45: Connected to database [gabsam] with user [tpcds1]
2018-08-14 12:20:45: Connection pool instantiated with [1] connections
2018-08-14 12:20:48: ('spark.cores.max', '20')
2018-08-14 12:20:48: ('spark.driver.port', '17978')
2018-08-14 12:20:48: ('spark.executor.memory', '2g')
2018-08-14 12:20:48: ('spark.app.id', 'app-20180814122047-0046')
2018-08-14 12:20:48: ('spark.executor.id', 'driver')
2018-08-14 12:20:48: ('spark.python.worker.reuse', 'True')
2018-08-14 12:20:48: ('spark.driver.maxResultSize', '1g')
2018-08-14 12:20:48: ('spark.default.parallelism', '80')
2018-08-14 12:20:48: ('spark.sql.shuffle.partitions', '80')
2018-08-14 12:20:48: ('spark.executor.instances', '20')
2018-08-14 12:20:48: ('spark.logConf', 'False')
2018-08-14 12:20:48: ('spark.rdd.compress', 'True')
2018-08-14 12:20:48: ('spark.driver.host', 'tempvcenter.rs2.com')
2018-08-14 12:20:48: ('spark.driver.memory', '2g')
2018-08-14 12:20:48: ('spark.serializer.objectStreamReset', '100')
2018-08-14 12:20:48: ('spark.executor.cores', '1')
2018-08-14 12:20:48: ('spark.master', 'spark://cisk.rs2.com:7077')
2018-08-14 12:20:48: ('spark.submit.deployMode', 'client')
2018-08-14 12:20:48: ('spark.executorEnv.PYTHONPATH', '$PYTHONPATH:/home/gabriels/ICS5200')
2018-08-14 12:20:48: ('spark.ui.showConsoleProgress', 'true')
2018-08-14 12:20:48: ('spark.app.name', 'ICS5200')
2018-08-14 12:20:48: TPC-DS SQLs generated for dataset of [1] Gigabytes
2018-08-14 12:20:48: Successfully migrated catv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated ccv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated custv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_c.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_c_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ca.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ca_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ca_v.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_cc.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_cc_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_cc_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_cp.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_cp_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_i.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_i_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_i_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_p.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_p_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_s_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_s_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_w.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_w_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_wp.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_wp_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_wp_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ws.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ws_s.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated dm_ws_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated itemv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated iv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_cr.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_cr_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_cs.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_cs_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_sr.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_sr_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_ss.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_ss_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_wr.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_wr_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_ws.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated lf_ws_t.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated promv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated storv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated websv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated webv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully migrated wrhsv_up.sql under src/ tree..
2018-08-14 12:20:48: Successfully finished migrating DML scripts!
2018-08-14 12:20:48: Starting TPC-DS sql splitting
2018-08-14 12:20:48: Generated query_1.sql
2018-08-14 12:20:48: Generated query_2.sql
2018-08-14 12:20:48: Generated query_3.sql
2018-08-14 12:20:48: Generated query_4.sql
2018-08-14 12:20:48: Generated query_5.sql
2018-08-14 12:20:48: Generated query_6.sql
2018-08-14 12:20:48: Generated query_7.sql
2018-08-14 12:20:48: Generated query_8.sql
2018-08-14 12:20:48: Generated query_9.sql
2018-08-14 12:20:48: Generated query_10.sql
2018-08-14 12:20:48: Generated query_11.sql
2018-08-14 12:20:48: Generated query_12.sql
2018-08-14 12:20:48: Generated query_13.sql
2018-08-14 12:20:48: Generated query_14.sql
2018-08-14 12:20:48: Generated query_15.sql
2018-08-14 12:20:48: Generated query_16.sql
2018-08-14 12:20:48: Generated query_17.sql
2018-08-14 12:20:48: Generated query_18.sql
2018-08-14 12:20:48: Generated query_19.sql
2018-08-14 12:20:48: Generated query_20.sql
2018-08-14 12:20:48: Generated query_21.sql
2018-08-14 12:20:48: Generated query_22.sql
2018-08-14 12:20:48: Generated query_23.sql
2018-08-14 12:20:48: Generated query_24.sql
2018-08-14 12:20:48: Generated query_25.sql
2018-08-14 12:20:48: Generated query_26.sql
2018-08-14 12:20:48: Generated query_27.sql
2018-08-14 12:20:48: Generated query_28.sql
2018-08-14 12:20:48: Generated query_29.sql
2018-08-14 12:20:48: Generated query_30.sql
2018-08-14 12:20:48: Generated query_31.sql
2018-08-14 12:20:48: Generated query_32.sql
2018-08-14 12:20:48: Generated query_33.sql
2018-08-14 12:20:48: Generated query_34.sql
2018-08-14 12:20:48: Generated query_35.sql
2018-08-14 12:20:48: Generated query_36.sql
2018-08-14 12:20:48: Generated query_37.sql
2018-08-14 12:20:48: Generated query_38.sql
2018-08-14 12:20:48: Generated query_39.sql
2018-08-14 12:20:48: Generated query_40.sql
2018-08-14 12:20:48: Generated query_41.sql
2018-08-14 12:20:48: Generated query_42.sql
2018-08-14 12:20:48: Generated query_43.sql
2018-08-14 12:20:48: Generated query_44.sql
2018-08-14 12:20:48: Generated query_45.sql
2018-08-14 12:20:48: Generated query_46.sql
2018-08-14 12:20:48: Generated query_47.sql
2018-08-14 12:20:48: Generated query_48.sql
2018-08-14 12:20:48: Generated query_49.sql
2018-08-14 12:20:48: Generated query_50.sql
2018-08-14 12:20:48: Generated query_51.sql
2018-08-14 12:20:48: Generated query_52.sql
2018-08-14 12:20:48: Generated query_53.sql
2018-08-14 12:20:48: Generated query_54.sql
2018-08-14 12:20:48: Generated query_55.sql
2018-08-14 12:20:48: Generated query_56.sql
2018-08-14 12:20:48: Generated query_57.sql
2018-08-14 12:20:48: Generated query_58.sql
2018-08-14 12:20:48: Generated query_59.sql
2018-08-14 12:20:48: Generated query_60.sql
2018-08-14 12:20:48: Generated query_61.sql
2018-08-14 12:20:48: Generated query_62.sql
2018-08-14 12:20:48: Generated query_63.sql
2018-08-14 12:20:48: Generated query_64.sql
2018-08-14 12:20:48: Generated query_65.sql
2018-08-14 12:20:48: Generated query_66.sql
2018-08-14 12:20:48: Generated query_67.sql
2018-08-14 12:20:48: Generated query_68.sql
2018-08-14 12:20:48: Generated query_69.sql
2018-08-14 12:20:48: Generated query_70.sql
2018-08-14 12:20:48: Generated query_71.sql
2018-08-14 12:20:48: Generated query_72.sql
2018-08-14 12:20:48: Generated query_73.sql
2018-08-14 12:20:48: Generated query_74.sql
2018-08-14 12:20:48: Generated query_75.sql
2018-08-14 12:20:48: Generated query_76.sql
2018-08-14 12:20:48: Generated query_77.sql
2018-08-14 12:20:48: Generated query_78.sql
2018-08-14 12:20:48: Generated query_79.sql
2018-08-14 12:20:48: Generated query_80.sql
2018-08-14 12:20:48: Generated query_81.sql
2018-08-14 12:20:48: Generated query_82.sql
2018-08-14 12:20:48: Generated query_83.sql
2018-08-14 12:20:48: Generated query_84.sql
2018-08-14 12:20:48: Generated query_85.sql
2018-08-14 12:20:48: Generated query_86.sql
2018-08-14 12:20:48: Generated query_87.sql
2018-08-14 12:20:48: Generated query_88.sql
2018-08-14 12:20:48: Generated query_89.sql
2018-08-14 12:20:48: Generated query_90.sql
2018-08-14 12:20:48: Generated query_91.sql
2018-08-14 12:20:48: Generated query_92.sql
2018-08-14 12:20:48: Generated query_93.sql
2018-08-14 12:20:48: Generated query_94.sql
2018-08-14 12:20:48: Generated query_95.sql
2018-08-14 12:20:48: Generated query_96.sql
2018-08-14 12:20:48: Generated query_97.sql
2018-08-14 12:20:48: Generated query_98.sql
2018-08-14 12:20:48: Generated query_99.sql
2018-08-14 12:20:48: Generated query_100.sql
2018-08-14 12:20:48: Generated query_101.sql
2018-08-14 12:20:48: Generated query_102.sql
2018-08-14 12:20:48: Generated query_103.sql
2018-08-14 12:20:48: Generated query_104.sql
2018-08-14 12:20:48: Script Complete!
-------------------------------------
