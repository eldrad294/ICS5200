create table REP_EXECUTION_PLANS tablespace users as select * from v$sql where 1=0;
alter table REP_EXECUTION_PLANS add TPC_TRANSACTION_NAME varchar2(20);
alter table REP_EXECUTION_PLANS add STATEMENT_HASH_SUM varchar2(4000);
alter table REP_EXECUTION_PLANS add BENCHMARK_ITERATION varchar2(2);
alter table REP_EXECUTION_PLANS add GATHERED_STATS varchar2(5);
--
drop table REP_EXECUTION_PLANS;
--
insert into REP_EXECUTION_PLANS
select * from(
    select vs.*, 'query_1.sql', '4dd7b29ad1d1eddc7deecb11216895cf'
    from v$sql vs where sql_text like '%/*ICS5200_MONITOR_HINT*/%'
    and sql_text not like '%v_sql%'
    and sql_text not like '%V_SQL%'
    order by last_active_time desc )
where rownum <= 1;

select  tpc_transaction_name as tpc_transaction_name,
		count(tpc_transaction_name) as number_of_executions,
		sum(SHARABLE_MEM) as SHARABLE_MEM,
		sum(PERSISTENT_MEM) as PERSISTENT_MEM,
		sum(RUNTIME_MEM) as RUNTIME_MEM,
		sum(SORTS) as SORTS,
		sum(LOADED_VERSIONS) as LOADED_VERSIONS,
		sum(OPEN_VERSIONS) as OPEN_VERSIONS,
		sum(USERS_OPENING) as USERS_OPENING,
		sum(FETCHES) as FETCHES,
		sum(EXECUTIONS) as EXECUTIONS,
		sum(PX_SERVERS_EXECUTIONS) as PX_SERVERS_EXECUTIONS,
		sum(END_OF_FETCH_COUNT) as END_OF_FETCH_COUNT,
		sum(USERS_EXECUTING) as USERS_EXECUTING,
		sum(LOADS) as LOADS,
		min(FIRST_LOAD_TIME) as FIRST_LOAD_TIME,
		sum(INVALIDATIONS) as INVALIDATIONS,
		sum(PARSE_CALLS) as PARSE_CALLS,
		sum(DISK_READS) as DISK_READS,
		sum(DIRECT_WRITES) as DIRECT_WRITES,
		sum(BUFFER_GETS) as BUFFER_GETS,
		sum(APPLICATION_WAIT_TIME) as APPLICATION_WAIT_TIME,
		sum(CONCURRENCY_WAIT_TIME) as CONCURRENCY_WAIT_TIME,
		sum(CLUSTER_WAIT_TIME) as CLUSTER_WAIT_TIME,
		sum(USER_IO_WAIT_TIME) as USER_IO_WAIT_TIME,
		sum(PLSQL_EXEC_TIME) as PLSQL_EXEC_TIME,
		sum(JAVA_EXEC_TIME) as JAVA_EXEC_TIME,
		sum(OPTIMIZER_COST) as OPTIMIZER_COST,
		sum(CHILD_NUMBER) as CHILD_NUMBER,
		sum(SERIALIZABLE_ABORTS) as SERIALIZABLE_ABORTS,
		sum(OUTLINE_CATEGORY) as OUTLINE_CATEGORY,
		sum(CPU_TIME) as CPU_TIME,
		sum(ELAPSED_TIME) as ELAPSED_TIME,
		sum(OUTLINE_SID) as OUTLINE_SID,
		sum(SQLTYPE) as SQLTYPE,
		min(LAST_LOAD_TIME) as LAST_LOAD_TIME,
		sum(CHILD_LATCH) as CHILD_LATCH,
		min(LAST_ACTIVE_TIME) as LAST_ACTIVE_TIME,
		sum(TYPECHECK_MEM) as TYPECHECK_MEM,
		sum(IO_CELL_OFFLOAD_ELIGIBLE_BYTES) as IO_CELL_OFFLOAD_ELIGIBLE_BYTES,
		sum(IO_INTERCONNECT_BYTES) as IO_INTERCONNECT_BYTES,
		sum(PHYSICAL_READ_REQUESTS) as PHYSICAL_READ_REQUESTS,
		sum(PHYSICAL_READ_BYTES) as PHYSICAL_READ_BYTES,
		sum(PHYSICAL_WRITE_REQUESTS) as PHYSICAL_WRITE_REQUESTS,
		sum(PHYSICAL_WRITE_BYTES) as PHYSICAL_WRITE_BYTES,
		sum(OPTIMIZED_PHY_READ_REQUESTS) as OPTIMIZED_PHY_READ_REQUESTS,
		sum(LOCKED_TOTAL) as LOCKED_TOTAL,
		sum(PINNED_TOTAL) as PINNED_TOTAL,
		sum(IO_CELL_UNCOMPRESSED_BYTES) as IO_CELL_UNCOMPRESSED_BYTES,
		sum(IO_CELL_OFFLOAD_RETURNED_BYTES) as IO_CELL_OFFLOAD_RETURNED_BYTES,
		sum(IM_SCANS) as IM_SCANS,
		sum(IM_SCAN_BYTES_UNCOMPRESSED) as IM_SCAN_BYTES_UNCOMPRESSED,
		sum(IM_SCAN_BYTES_INMEMORY) as IM_SCAN_BYTES_INMEMORY,
		count(STATEMENT_HASH_SUM) as STATEMENT_HASH_SUM,
		count(BENCHMARK_ITERATION) as BENCHMARK_ITERATIONS
from REP_EXECUTION_PLANS
where GATHERED_STATS = 'false'
group by tpc_transaction_name;
--
